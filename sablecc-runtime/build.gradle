plugins {
  id "java-library"
}

task javadocJar(type: Jar) {
  archiveClassifier.set("javadoc")
  from javadoc
}

task sourcesJar(type: Jar) {
  archiveClassifier.set("sources")
  from sourceSets.main.allSource
}

artifacts {
  archives javadocJar, sourcesJar
}

if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')) {
  
  apply plugin: 'signing'
  
  signing {
    sign configurations.archives
  }
  uploadArchives {
    repositories {
      mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
        
        repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
          authentication(userName: ossrhUsername, password: ossrhPassword)
        }
        
        snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
          authentication(userName: ossrhUsername, password: ossrhPassword)
        }
        
        pom.project {
          name 'SableCC - Stups fork (runtime library)'
          packaging 'jar'
          // optionally artifactId can be defined here
          description 'This is the runtime support library for the Stups fork of SableCC. It provides common classes and interfaces used by the generated parsers at runtime.'
          url 'https://github.com/bendisposto/sablecc-stups'
          
          licenses {
            license {
              name 'GNU Lesser General Public License, Version 2.1'
              url 'http://www.gnu.org/licenses/lgpl-2.1.html'
            }
          }
          
          scm {
            connection 'scm:git:git://github.com/bendisposto/sablecc-stups.git'
            developerConnection 'scm:git:git@github.com:bendisposto/sablecc-stups.git'
            url 'https://github.com/bendisposto/sablecc-stups'
          }
          
          
          developers {
            developer {
              id 'bendisposto'
              name 'Jens Bendisposto'
              email 'jens@bendisposto.de'
            }
          }
        }
      }
    }
  }
}
